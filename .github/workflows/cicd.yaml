name: CI/CD Pipeline

on:
  push:
    branches: [main]

permissions:
  contents: write

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3


      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Install dependencies
        run: |
          pip install pytest
          pip install -r ./api/requirements.txt
          pip install httpx
      - name: Running  pytest
        run: pytest -v
        continue-on-error: false


      - name: DockerHub login
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Get Version
        id: vars
        run: echo "VERSION=$(cat VERSION)" >> $GITHUB_ENV


      - name: Building and Pushing API Images
        uses: docker/build-push-action@v6
        with:
          context: ./api
          file: ./api/Dockerfile
          push: true
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/todo-api:latest
            ${{ secrets.DOCKERHUB_USERNAME }}/todo-api:${{ env.VERSION }}
            ${{ secrets.DOCKERHUB_USERNAME }}/todo-api:${{ github.sha }}

      - name: Building and Pushing Web image
        uses: docker/build-push-action@v6
        with:
          context: ./web
          file: ./web/Dockerfile
          push: true
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/todo-web:latest
            ${{ secrets.DOCKERHUB_USERNAME }}/todo-web:${{ env.VERSION }}
            ${{ secrets.DOCKERHUB_USERNAME }}/todo-web:${{ github.sha }}


      # - name: Setup kubectl using KUBECONFIG secret
      #   run: |
      #     mkdir -p  $HOME/.kube
      #     echo "${{ secrets.KUBECONFIG }}" | base64 -d > $HOME/.kube/config

      # - name: Deploy to the cluster
      #   run: |
      #     kubectl apply -f k8s/


      - name: Update image tags in Kubernetes manifests
        run: |
          sed -i "s|image: .*/todo-api:.*|image: ${{ secrets.DOCKERHUB_USERNAME }}/todo-api:${{ github.sha }}|" k8s/api.yaml
          sed -i "s|image: .*/todo-web:.*|image: ${{ secrets.DOCKERHUB_USERNAME }}/todo-web:${{ github.sha }}|" k8s/web.yaml

      # -----------------------------
      # 5. Commit & push changes so Argo CD can detect and deploy
      # -----------------------------
      - name: Commit and push manifest updates
        run: |
          git config user.name "github-actions"
          git config user.email "actions@github.com"
          git add k8s/api.yaml k8s/web.yaml
          git commit -m "Update api,web image tags to ${{ github.sha }}"
          git pull origin main --rebase
          git push origin main
